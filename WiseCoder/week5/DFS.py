# DFS 메서드 정의
def dfs(gragh, v, visited):
    visited[v]=True     # 현재 노드를 방문 처리
    print(v, end='')    # 방문의 의미로 해당 노드 번호 출력
    # 현재 노드와 연결된 다른 노드를 재귀적으로 방문 -> 깊이 우선으로, 최대한 깊게 그래프 탐색 가능
    for i in gragh[v]:
        if not visited[i]:
            dfs(gragh, i, visited)

# 각 노드가 연결된 정보를 표현(2차원 리스트)
graph = [
    [],         # 보통 인덱스1부터 시작하니까 0번인덱스는 비워둠
    [2,3,8],    # 1번노드와 인접한 2,3,8번 노드
    [1,7],      # 2번노드와 인접한 1,7번 노드
    [1,4,5],    # 3번 노드와 인접한 1, 4,5번 노드
    [3,5],      # 4번 노드와 인접한 3,5번 노드
    [3,4],      # 5번 노드와 인접한 3,4번 노드
    [7],        # 6번 노드와 인접한 7번 노드
    [2,6,8],    # 7번 노드와 인접한 2,6,8번 노드
    [1,7]       # 8번 노드와 인접한 1,7번 노드
]

# 각 노드가 방문된 정보를 표현(1차원 리스트)
visited = [False]*9     # 기본적으로 모든값은 False로 처리, 처음에는 모든 노드를 하나도 방문하지 않은 것처럼 처리
# 1~8번 노드 -> 인덱스 0은 사용 x -> 8이 아닌 9로 1차원 리스트 초기화!

# 정의된 DFS 함수 호출
dfs(graph, 1, visited)